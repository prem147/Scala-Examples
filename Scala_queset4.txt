################################################################################################################################################
1: Create a Class with instance attributes
Write a Scala program to create a Vehicle class with max_speed and mileage instance attributes.

class vehicle( max_speed: Int, mileage:Int){
  val speed =max_speed
  val tot_mileage=mileage
}


#####################################################################################################################################################
2: Create a child class Bus that will inherit all of the variables and methods of the Vehicle class

	class Vehicle(name : String, max_speed : Int , mileage : Int ){}

Create a Bus object that will inherit all of the variables and methods of the parent Vehicle class and display it.

Expected Output:
	Vehicle Name: School Volvo Speed: 180 Mileage: 12

import java.io._

class vehicle(val name:String, val max_speed: Int, val mileage:Int){
  
val veh_name = name
  val speed =max_speed
  val tot_mileage=mileage

  
}

class bus(override val name: String, override val max_speed: Int, override val mileage:Int) extends Vehicle(name, max_speed, mileage){
def details(name:String, max_speed:Int, mileage:Int){
    print("Name:",name,"Max_Speed:",max_speed,"Mileage:",mileage)
  }
}

object bus{
  def main(args:Array[String]){
    val buses = new vehicle("Volvo",100,40)
    buses.details("Volvo",100,40)
  }
}

######################################################################################################################################################
3: Create a Bus class that inherits from the Vehicle class. Give the capacity argument of Bus.seating_capacity() a default value of 50.
Use the following code for your parent Vehicle class.

class Vehicle(name : String, max_speed : Int , mileage : Int ){
	 def seating_capacity(capacity : String){
		print("The seating capacity of a"+ {name} + " is "+{capacity}+" passengers")
	 }
}

Expected Output:
	The seating capacity of a bus is 50 passengers

import java.io._

class Vehicle(val name : String, val max_speed : Int , val mileage : Int ){
  
	 def seating_capacity(capacity : Int){
		print("The seating capacity of a"+ {name} + " is "+{capacity}+" passengers")
	 }
}


class bus(override val name: String, override val max_speed: Int, override val mileage:Int) extends Vehicle(name, max_speed, mileage){
  	def details(name:String, max_speed:Int, mileage:Int){
    		print("Name:",name,"Max_Speed:",max_speed,"Mileage:",mileage)
  	}
	override def seating_capacity(capacity: Int=50){
    		return super.seating_capacity(50)
  	}
}

object bus{
  def main(args:Array[String]){
    val buses = new Vehicle("Volvo",100,40)
    var veh = new bus("Volvo",100,40)
    print(veh.seating_capacity())
  }
}


#####################################################################################################################################################
4. Define a property that must have the same value for every class instance (object)
Define a class attribute”color” with a default value white. I.e., Every Vehicle should be white.

Use the following code for this exercise.

class Vehicle(name : String, max_speed : Int , mileage : Int ){

}

class Bus extends Vehicle{
}

class Bus extends Vehicle{
}

Expected Output:
	Color: White, Vehicle name: School Volvo, Speed: 180, Mileage: 12
	Color: White, Vehicle name: Audi Q5, Speed: 240, Mileage: 18

import java.io._

class Vehicle(val name : String, val max_speed : Int , val mileage : Int ){
  val color = "White"
  val veh_name = name
  val speed =max_speed
  val tot_mileage=mileage
  
}


class bus1(override val name: String, override val max_speed :Int, override val mileage:Int) extends Vehicle(name, max_speed, mileage){
 
}
class bus2(override val name: String, override val max_speed :Int, override val mileage:Int) extends Vehicle(name, max_speed, mileage){
 
}

object bus{
  def main(args:Array[String]){
    val buses = new Vehicle("Volvo",100,40)
    var veh = new bus1("Volvo",100,40)
    val veh2= new bus2("Mahindra",160,20)
    
    print("Color:"+veh.color+" "+"Vehicle Name:"+veh.name+" "+"Speed:"+veh.speed+" "+"Mileage"+veh.tot_mileage)
    println()
    print("Color:"+veh2.color+" "+"Vehicle Name:"+veh2.name+" "+"Speed:"+veh2.speed+" "+"Mileage"+veh2.tot_mileage)

  }
}

	
####################################################################################################################################################################################
5. Create a Bus child class that inherits from the Vehicle class. The default fare charge of any vehicle is seating capacity * 100. If Vehicle is Bus instance, we need to add an extra 10% on full fare as a maintenance charge. So total fare for bus instance will become the final amount = total fare + 10% of the total fare.

Note: The bus seating capacity is 50. so the final fare amount should be 5500. You need to override the fare() method of a Vehicle class in Bus class.

Use the following code for your parent Vehicle class. We need to access the parent class from inside a method of a child class.

class Vehicle(name : String, capacity : Int , mileage : Int ){
	def fare(): Int = 
   {
      return capacity*100
   }
}
class Bus extends Vehicle{
 // write your code here
}   

val School_bus = new Bus("School Volvo", 12, 50)
print("Total Bus fare is:" + School_bus.fare())

Expected Output:
	Total Bus fare is: 5500

import java.io._

class Vehicle(val name : String,val capacity:Int=50,  val mileage : Int ){
  val color = "White"
  val veh_name = name
  val tot_mileage=mileage
	   
  def fare(): Int = 
   {
      return capacity*100
   }
}


class bus1(override val name: String, override val capacity :Int, override val mileage:Int) extends Vehicle(name, capacity,  mileage){
 override def fare():Int ={
   var total = super.fare()
   total +=total*10/100
   return total
  }
}

object bus{
  def main(args:Array[String]){
    var veh = new bus1("Volvo",12,50)
    print("Total Bus fare is:" + veh.fare())
  }
}
	
##################################################################################################################################################################################
6. Write a program to print the area and perimeter of a triangle having sides of 3, 4 and 5units by creating a class named 'Triangle' without any parameter in its constructor.

class Triangle{
    
    var a =3
    var b =4
    var c =5
    var p =(a+b+c)
    var s =p/2
    var x= s*(s-a)*(s-b)*(s-c)
    var area = Math.sqrt(x)
    
    print("Perimeter:"+p+" "+"Area:"+area)
  
}

###################################################################################################################################################################################
7. Print the average of three numbers entered by user by creating a class named 'Average'having a method to calculate and print the average.

class Average(val a:Int,val b:Int, val c:Int){
  def avg(a:Int,b:Int,c:Int):Double={
    val d = (a+b+c)/3
    return d
  }
}

object bus{
  def main(args:Array[String]){
    var average = new Average(1,2,3)
    print(average.avg(1,2,3))
  }
}
