1. Write a program to print all the prime numbers between two given numbers by creating a function.

def primenumb(a:Int, b:Int): Unit = {
      
      for (i <- a to b){
        var fg = 1
            breakable{    
         for(j <- 2 to i/2){
            
              if(i % j == 0){
                fg =0
                break
              }
            }
         }
            if(fg==1){
                println(i)
            } 
      }
  }
 
    def main(args: Array[String]){
      var strt_num = readInt
      var end_num = readInt
      if (strt_num <= 2) {
        strt_num = 2;
        if (end_num >= 2) {
            println(strt_num);
            strt_num+=1;
        }
      }

2. Write a Program to print the Fibonacci sequence of a number.
def fibonacci(n:Int):Int={
    if(n<3) 
      return 1
    else
      return fibonacci(n-1)+fibonacci(n-2)
  }
 
    def main(args: Array[String]){
      var inp = readInt
      for(i<- 0 to inp)
        println(fibonacci(i))
  }

4. Given a array of N positive integers and an integer X. The task is to find the frequency of X in Array.
Input:
N = 5
vector = {1, 1, 1, 1, 1}
X = 1
Output: 
5
Explanation: Frequency of 1 is 5.

 var size = readInt
      var inp = new Array[Int](size)
      var check= readInt
      var count=0
      for(i <- 0 to size-1){
        inp(i)=readInt
        if (inp(i)==check)
          count+=1
      }
      
      println(count)

5. Write the code using function in scala for below problems:-
	a. https://practice.geeksforgeeks.org/problems/peak-element/1
		def peak(n:Array[Int]): Unit={
    if (n.length == 1)
      println(n(0))
    if (n(0)>n(1))
      println(n(0))
    if (n(n.length-1)>=n(n.length-2))
      println(n(n.length-1))
    
      for(i <- 1 to n.length-1){
        if(n(i)>=n(i-1) && n(i)>=n(i+1))
          println(n(i))
      }  
  }
 
    def main(args: Array[String]){
      var size = readInt
      var inp = new Array[Int](size)
      for(i <- 0 to size-1){
        inp(i)=readInt
      }
      println(peak(inp))
 
	b. https://practice.geeksforgeeks.org/problems/subarray-with-given-sum-1587115621/1
def subsum(arr: Array[Int], n:Int, s:Int): Unit={
    var currentsum = 0
    for(i<- 0 to n){
      currentsum= arr(i)
      breakable{
      for(j <- (i+1) to n){
        if(currentsum == s){
          println(i+1,j)
        }
       if(currentsum > s || j == n)
         break
         
         currentsum +=arr(j)
         }
      }
    }
  }
 
    def main(args: Array[String]){
      var size =readInt
      var sum = readInt
      var x = new Array[Int](size)
      
        for(j <- 0 to size-1){
        x(j)=readInt
      }
      println(subsum(x,size,sum))
 
	c. https://practice.geeksforgeeks.org/problems/reverse-an-array/0
def reverse(n: Array[Int]): Array[Int]={
    var t1 = 0
    var t2 = 0
    var fp = 0
    var lp = n.length - 1   
    while (fp < lp) {
    t1 = n(fp)
    t2 = n(lp)
    n(fp) = t2
    n(lp) = t1
    fp += 1
    lp -= 1
     }
    return n
  }
 
    def main(args: Array[String]){
      var size =readInt
      var x = new Array[Int](size)
      
        for(j <- 0 to size-1){
        x(j)=readInt
      }
      
      var res = reverse(x)
        for ( d <- res) {
       print(s"${d}, ")        
     }
	d. https://practice.geeksforgeeks.org/problems/sort-the-array0055/1 (using bubble sort, insertion sort and selection sort)

Sorting through Functioin:
def swap(arr: Array[Int], x: Int, y: Int): Unit = {
		var temp = arr(x);
		arr(x) = arr(y);
		arr(y) = temp;
	}
	def selectionSort(arr: Array[Int], n: Int): Unit = {
		var min = 0;
		var i = 0;
		for (i <- 0 to (n-1))
		{
			min = i;
			for(j <- (i+1) to (n-1))
			{
				if (arr(min) > arr(j))
				{
					
					min = j;
				}
			}
			if (i != min)
			{
				swap(arr, i, min);
			}
		}
	}
	
	def insertionsort2(arr: Array[Int], l:Int): Array[Int]={
  var l = arr.length
  var temp =0
  var j=0
      for(i <- 1 to l-1){
        temp = arr(i)
        j=i-1
        while(j>=0 && arr(j)>temp){
          arr(j+1)=arr(j)
          j-=1
        }
        arr(j+1)=temp
      }
      arr
    } 
	def bubblesort(arr: Array[Int], l:Int): Array[Int]={
    var t=0
    for(i <- 0 to (l-1)){
      for(j <- 0 to (l-i-2)){
        if(arr(j+1)<arr(j)){
          t=arr(j)
          arr(j)=arr(j+1)
          arr(j+1)=t
        }
      }
      
      }
    arr
  }
	def display(arr: Array[Int], n: Int): Unit = {
		var i: Int = 0;
		while (i < n)
		{
			print("  " + arr(i));
			i += 1;
		}
		print("\n");
	}
def main(args: Array[String]): Unit = {
		var arr = Array(8, 2, 5, 6, 1, 3, 71, 125, 50, 23, 84, 13, 77, 26, 62)
		
		var n = arr.length
		/**selectionSort(arr, n);
		display(arr, n)

		insertionsort2(arr,n)
		display(arr,n)**/
		
		bubblesort(arr,n)
		display(arr,n)

}

Without using Function:

Bubble sort:
var arr= Array(12,11,13,5,6)
        var temp = 0
        var i=0
        var l=arr.length
        while(i<l){
          var j = l-1
          while(j>i){
            if(arr(j)<arr(j-1)){
              temp = arr(j)
              arr(j)=arr(j-1)
              arr(j-1)= temp
            }
            j-=1
          }
          i+=1
        }
        
        i=0
        
        while(i<l){
          printf("%d ",arr(i)," ")
          i+=1
        }
        println()

Insertion Sort:

var arr= Array(12,11,13,5,6)
      var l = arr.length
      var temp =0
      var j=0
      var i=0
      for(i <- 1 to l-1){
        temp = arr(i)
        j=i-1
        while(j>=0 && arr(j)>temp){
          arr(j+1)=arr(j)
          j-=1
          printf("%d ",arr(i)," ")
        }
        arr(j+1)=temp
      }
      i=0
      while(i<l){
          printf("%d ",arr(i)," ")
          i+=1
        }
        println()

Selection Sort:
def swap(arr: Array[Int], x: Int, y: Int): Unit = {
		var temp = arr(x);
		arr(x) = arr(y);
		arr(y) = temp;
	}
  
 var arr= Array(12,11,13,5,6)
     var n = arr.length
     var i =0
     var min =0
     while(i<n){
       min=i
       var j =i+1
       while(j<n){
         if(arr(min)>arr(j)){
           min=j
         }
         j+=1
       }
       if(i !=min){
         swap(arr,i,min)
       }
       i+=1
     }
     i=0
     while(i<n){
       print(" "+arr(i))
       i+=1
     }


e. https://practice.geeksforgeeks.org/problems/longest-common-prefix-in-an-array5129/1

def com_text(arr: Array[String]): String={
    var s= arr(0)
    for(i <- arr){
     if(s.length>i.length)
       s=i
    } 
    for(i <- arr){
      if(i.contains(s)==false){
        while(i.contains(s)==false){
          s=s.substring(0,s.length-1)
        }
      }
  }
    s
  }
 def main(args: Array[String]){
      
      
      var x = Array("geeksforgeeks", "geeks", "geek",
         "geezer")
         println(com_text(x))

f. https://practice.geeksforgeeks.org/problems/closest-strings0611/1

def mindis(arr:Array[String],w1:String,w2:String): Int={
    var a= -1
    var b= -1
    var min =Integer.MAX_VALUE
    var tempdis=0
    for(i <- 0 to arr.length-1){
      if(arr(i).equals(w1)){
        a=i
      }
      
      if(arr(i).equals(w2)){
        b=i
      }
      
      if(a != -1 && b != -1){
      tempdis = math.abs(b-a).toInt
      
      if(tempdis<min){
        min = tempdis
        }
      }
      }
    return min
  }
 
    def main(args: Array[String]){
      var arr = Array("geeks", "for", "geeks", "contribute", 
     "practice")
      var w1 = "geeks"
      var w2 = "practice"
      
      println(mindis(arr,w1,w2))
 


